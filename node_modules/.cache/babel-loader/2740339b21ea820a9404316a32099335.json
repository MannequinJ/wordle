{"ast":null,"code":"var _jsxFileName = \"C:\\\\Files\\\\Course\\\\react-wordle-copy\\\\wordle-copy\\\\src\\\\App.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useReducer } from \"react\";\nimport { nanoid } from \"nanoid\";\nimport \"./index.css\";\nimport WORDS from \"./Constants/WORDS.js\";\nimport generateMysteryWord from \"./Functions/generateMysteryWord\";\nimport reducer from \"./Functions/reducer\";\nimport Board from \"./Components/Board\";\nimport handleKeyPress from \"./Functions/handleKeyPress\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst solution = generateMysteryWord(WORDS);\nexport default function App() {\n  _s();\n\n  const [state, dispatch] = useReducer(reducer, {\n    mysteryWord: solution,\n    wordsArr: [],\n    currentChar: {\n      id: nanoid(),\n      status: \"\",\n      text: \"\"\n    },\n    currentWord: [],\n    errorMessage: \"\"\n  });\n  useEffect(() => document.addEventListener(\"keydown\", e => handleKeyPress(e, dispatch)), []);\n  console.log(state);\n  console.log(state.mysteryWord);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"header\",\n      children: /*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Wordle\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"game\",\n      children: /*#__PURE__*/_jsxDEV(Board, {\n        data: state\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 31,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"1skO5gn+ngJmgUSLDmK67UdmUt0=\");\n\n_c = App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["C:/Files/Course/react-wordle-copy/wordle-copy/src/App.js"],"names":["React","useEffect","useReducer","nanoid","WORDS","generateMysteryWord","reducer","Board","handleKeyPress","solution","App","state","dispatch","mysteryWord","wordsArr","currentChar","id","status","text","currentWord","errorMessage","document","addEventListener","e","console","log"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,UAA3B,QAA6C,OAA7C;AACA,SAASC,MAAT,QAAuB,QAAvB;AACA,OAAO,aAAP;AACA,OAAOC,KAAP,MAAkB,sBAAlB;AACA,OAAOC,mBAAP,MAAgC,iCAAhC;AACA,OAAOC,OAAP,MAAoB,qBAApB;AACA,OAAOC,KAAP,MAAkB,oBAAlB;AACA,OAAOC,cAAP,MAA2B,4BAA3B;;AAEA,MAAMC,QAAQ,GAAGJ,mBAAmB,CAACD,KAAD,CAApC;AACA,eAAe,SAASM,GAAT,GAAe;AAAA;;AAC5B,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBV,UAAU,CAACI,OAAD,EAAU;AAC5CO,IAAAA,WAAW,EAAEJ,QAD+B;AAE5CK,IAAAA,QAAQ,EAAE,EAFkC;AAG5CC,IAAAA,WAAW,EAAE;AACXC,MAAAA,EAAE,EAAEb,MAAM,EADC;AAEXc,MAAAA,MAAM,EAAE,EAFG;AAGXC,MAAAA,IAAI,EAAE;AAHK,KAH+B;AAQ5CC,IAAAA,WAAW,EAAE,EAR+B;AAS5CC,IAAAA,YAAY,EAAE;AAT8B,GAAV,CAApC;AAWAnB,EAAAA,SAAS,CACP,MACEoB,QAAQ,CAACC,gBAAT,CAA0B,SAA1B,EAAsCC,CAAD,IAAOf,cAAc,CAACe,CAAD,EAAIX,QAAJ,CAA1D,CAFK,EAGP,EAHO,CAAT;AAKAY,EAAAA,OAAO,CAACC,GAAR,CAAYd,KAAZ;AACAa,EAAAA,OAAO,CAACC,GAAR,CAAYd,KAAK,CAACE,WAAlB;AACA,sBACE;AAAK,IAAA,SAAS,EAAC,KAAf;AAAA,4BACE;AAAK,MAAA,SAAS,EAAC,QAAf;AAAA,6BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YADF,eAKE;AAAK,MAAA,SAAS,EAAC,MAAf;AAAA,6BACE,QAAC,KAAD;AAAO,QAAA,IAAI,EAAEF;AAAb;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YALF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAWD;;GA9BuBD,G;;KAAAA,G","sourcesContent":["import React, { useEffect, useReducer } from \"react\";\nimport { nanoid } from \"nanoid\";\nimport \"./index.css\";\nimport WORDS from \"./Constants/WORDS.js\";\nimport generateMysteryWord from \"./Functions/generateMysteryWord\";\nimport reducer from \"./Functions/reducer\";\nimport Board from \"./Components/Board\";\nimport handleKeyPress from \"./Functions/handleKeyPress\";\n\nconst solution = generateMysteryWord(WORDS);\nexport default function App() {\n  const [state, dispatch] = useReducer(reducer, {\n    mysteryWord: solution,\n    wordsArr: [],\n    currentChar: {\n      id: nanoid(),\n      status: \"\",\n      text: \"\",\n    },\n    currentWord: [],\n    errorMessage: \"\",\n  });\n  useEffect(\n    () =>\n      document.addEventListener(\"keydown\", (e) => handleKeyPress(e, dispatch)),\n    []\n  );\n  console.log(state);\n  console.log(state.mysteryWord);\n  return (\n    <div className=\"App\">\n      <div className=\"header\">\n        <h1>Wordle</h1>\n      </div>\n      {/* {state.errorMessage && <div>{state.errorMessage}</div>} */}\n      <div className=\"game\">\n        <Board data={state} />\n      </div>\n    </div>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}