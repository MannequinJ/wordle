{"ast":null,"code":"import ACTIONS from \"../Constants/ACTIONS\";\nimport SPECIAL_CHARS from \"../Constants/SPECIAL_CHARS\";\nimport checkForSpecialChars from \"./checkForSpecialChars\";\n\nconst handleKeyPress = (e, dispatch, status) => {\n  const pressedKey = e.key.toUpperCase();\n  console.log(pressedKey);\n\n  if (pressedKey === \"BACKSPACE\") {\n    dispatch({\n      type: ACTIONS.DELETE_CHAR\n    });\n  } else if (pressedKey === \"ENTER\") {\n    dispatch({\n      type: ACTIONS.CONFIRM_WORD\n    });\n  } else if (pressedKey.length === 1 && !isFinite(pressedKey) && !checkForSpecialChars(pressedKey, SPECIAL_CHARS)) {\n    dispatch({\n      type: ACTIONS.KEY_PRESS,\n      payload: e.key\n    });\n  } else {\n    return;\n  }\n};\n\nexport default handleKeyPress;","map":{"version":3,"sources":["C:/Files/Course/react-wordle-copy/wordle-copy/src/Functions/handleKeyPress.js"],"names":["ACTIONS","SPECIAL_CHARS","checkForSpecialChars","handleKeyPress","e","dispatch","status","pressedKey","key","toUpperCase","console","log","type","DELETE_CHAR","CONFIRM_WORD","length","isFinite","KEY_PRESS","payload"],"mappings":"AAAA,OAAOA,OAAP,MAAoB,sBAApB;AACA,OAAOC,aAAP,MAA0B,4BAA1B;AACA,OAAOC,oBAAP,MAAiC,wBAAjC;;AAEA,MAAMC,cAAc,GAAG,CAACC,CAAD,EAAIC,QAAJ,EAAcC,MAAd,KAAyB;AAC9C,QAAMC,UAAU,GAAGH,CAAC,CAACI,GAAF,CAAMC,WAAN,EAAnB;AACAC,EAAAA,OAAO,CAACC,GAAR,CAAYJ,UAAZ;;AACA,MAAIA,UAAU,KAAK,WAAnB,EAAgC;AAC9BF,IAAAA,QAAQ,CAAC;AAAEO,MAAAA,IAAI,EAAEZ,OAAO,CAACa;AAAhB,KAAD,CAAR;AACD,GAFD,MAEO,IAAIN,UAAU,KAAK,OAAnB,EAA4B;AACjCF,IAAAA,QAAQ,CAAC;AAAEO,MAAAA,IAAI,EAAEZ,OAAO,CAACc;AAAhB,KAAD,CAAR;AACD,GAFM,MAEA,IACLP,UAAU,CAACQ,MAAX,KAAsB,CAAtB,IACA,CAACC,QAAQ,CAACT,UAAD,CADT,IAEA,CAACL,oBAAoB,CAACK,UAAD,EAAaN,aAAb,CAHhB,EAIL;AACAI,IAAAA,QAAQ,CAAC;AAAEO,MAAAA,IAAI,EAAEZ,OAAO,CAACiB,SAAhB;AAA2BC,MAAAA,OAAO,EAAEd,CAAC,CAACI;AAAtC,KAAD,CAAR;AACD,GANM,MAMA;AACL;AACD;AACF,CAhBD;;AAiBA,eAAeL,cAAf","sourcesContent":["import ACTIONS from \"../Constants/ACTIONS\";\r\nimport SPECIAL_CHARS from \"../Constants/SPECIAL_CHARS\";\r\nimport checkForSpecialChars from \"./checkForSpecialChars\";\r\n\r\nconst handleKeyPress = (e, dispatch, status) => {\r\n  const pressedKey = e.key.toUpperCase();\r\n  console.log(pressedKey);\r\n  if (pressedKey === \"BACKSPACE\") {\r\n    dispatch({ type: ACTIONS.DELETE_CHAR });\r\n  } else if (pressedKey === \"ENTER\") {\r\n    dispatch({ type: ACTIONS.CONFIRM_WORD });\r\n  } else if (\r\n    pressedKey.length === 1 &&\r\n    !isFinite(pressedKey) &&\r\n    !checkForSpecialChars(pressedKey, SPECIAL_CHARS)\r\n  ) {\r\n    dispatch({ type: ACTIONS.KEY_PRESS, payload: e.key });\r\n  } else {\r\n    return;\r\n  }\r\n};\r\nexport default handleKeyPress;\r\n"]},"metadata":{},"sourceType":"module"}