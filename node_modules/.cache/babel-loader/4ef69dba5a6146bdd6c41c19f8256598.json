{"ast":null,"code":"var _jsxFileName = \"C:\\\\Files\\\\Course\\\\react-wordle-copy\\\\wordle-copy\\\\src\\\\App.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useReducer } from \"react\";\nimport { nanoid } from \"nanoid\";\nimport \"./index.css\";\nimport WORDS from \"./Constants/WORDS.js\";\nimport generateMysteryWord from \"./Functions/generateMysteryWord\";\nimport reducer from \"./Functions/reducer\";\nimport Board from \"./Components/Board\";\nimport handleKeyPress from \"./Functions/handleKeyPress\";\nimport EMPTY_WORDS_ARR from \"./Constants/EMPTY_WORDS_ARR\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst solution = generateMysteryWord(WORDS);\nexport default function App() {\n  _s();\n\n  const [state, dispatch] = useReducer(reducer, {\n    mysteryWord: solution,\n    wordsArr: EMPTY_WORDS_ARR,\n    currentWord: [],\n    currentCharIndex: -1,\n    currentRow: 0,\n    errorMessage: \"\",\n    message: \"\",\n    gameIsEnded: false\n  });\n  useEffect(() => document.addEventListener(\"keydown\", e => handleKeyPress(e, dispatch)), []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"header\",\n      children: /*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Wordle\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"game\",\n      children: [gameIsEnded && /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(\"h1\", {\n          children: state.message\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Board, {\n        data: state\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 31,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"z42PWN4FiLDpawxmk0A0ClpwGsg=\");\n\n_c = App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["C:/Files/Course/react-wordle-copy/wordle-copy/src/App.js"],"names":["React","useEffect","useReducer","nanoid","WORDS","generateMysteryWord","reducer","Board","handleKeyPress","EMPTY_WORDS_ARR","solution","App","state","dispatch","mysteryWord","wordsArr","currentWord","currentCharIndex","currentRow","errorMessage","message","gameIsEnded","document","addEventListener","e"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,UAA3B,QAA6C,OAA7C;AACA,SAASC,MAAT,QAAuB,QAAvB;AACA,OAAO,aAAP;AACA,OAAOC,KAAP,MAAkB,sBAAlB;AACA,OAAOC,mBAAP,MAAgC,iCAAhC;AACA,OAAOC,OAAP,MAAoB,qBAApB;AACA,OAAOC,KAAP,MAAkB,oBAAlB;AACA,OAAOC,cAAP,MAA2B,4BAA3B;AACA,OAAOC,eAAP,MAA4B,6BAA5B;;AAEA,MAAMC,QAAQ,GAAGL,mBAAmB,CAACD,KAAD,CAApC;AACA,eAAe,SAASO,GAAT,GAAe;AAAA;;AAC5B,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBX,UAAU,CAACI,OAAD,EAAU;AAC5CQ,IAAAA,WAAW,EAAEJ,QAD+B;AAE5CK,IAAAA,QAAQ,EAAEN,eAFkC;AAG5CO,IAAAA,WAAW,EAAE,EAH+B;AAI5CC,IAAAA,gBAAgB,EAAE,CAAC,CAJyB;AAK5CC,IAAAA,UAAU,EAAE,CALgC;AAM5CC,IAAAA,YAAY,EAAE,EAN8B;AAO5CC,IAAAA,OAAO,EAAE,EAPmC;AAQ5CC,IAAAA,WAAW,EAAE;AAR+B,GAAV,CAApC;AAWApB,EAAAA,SAAS,CACP,MACEqB,QAAQ,CAACC,gBAAT,CAA0B,SAA1B,EAAsCC,CAAD,IAAOhB,cAAc,CAACgB,CAAD,EAAIX,QAAJ,CAA1D,CAFK,EAGP,EAHO,CAAT;AAMA,sBACE;AAAK,IAAA,SAAS,EAAC,KAAf;AAAA,4BACE;AAAK,MAAA,SAAS,EAAC,QAAf;AAAA,6BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YADF,eAKE;AAAK,MAAA,SAAS,EAAC,MAAf;AAAA,iBACGQ,WAAW,iBACV;AAAA,+BACE;AAAA,oBAAKT,KAAK,CAACQ;AAAX;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,cAFJ,eAME,QAAC,KAAD;AAAO,QAAA,IAAI,EAAER;AAAb;AAAA;AAAA;AAAA;AAAA,cANF;AAAA;AAAA;AAAA;AAAA;AAAA,YALF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAgBD;;GAlCuBD,G;;KAAAA,G","sourcesContent":["import React, { useEffect, useReducer } from \"react\";\nimport { nanoid } from \"nanoid\";\nimport \"./index.css\";\nimport WORDS from \"./Constants/WORDS.js\";\nimport generateMysteryWord from \"./Functions/generateMysteryWord\";\nimport reducer from \"./Functions/reducer\";\nimport Board from \"./Components/Board\";\nimport handleKeyPress from \"./Functions/handleKeyPress\";\nimport EMPTY_WORDS_ARR from \"./Constants/EMPTY_WORDS_ARR\";\n\nconst solution = generateMysteryWord(WORDS);\nexport default function App() {\n  const [state, dispatch] = useReducer(reducer, {\n    mysteryWord: solution,\n    wordsArr: EMPTY_WORDS_ARR,\n    currentWord: [],\n    currentCharIndex: -1,\n    currentRow: 0,\n    errorMessage: \"\",\n    message: \"\",\n    gameIsEnded: false,\n  });\n\n  useEffect(\n    () =>\n      document.addEventListener(\"keydown\", (e) => handleKeyPress(e, dispatch)),\n    []\n  );\n\n  return (\n    <div className=\"App\">\n      <div className=\"header\">\n        <h1>Wordle</h1>\n      </div>\n\n      <div className=\"game\">\n        {gameIsEnded && (\n          <div>\n            <h1>{state.message}</h1>\n          </div>\n        )}\n        <Board data={state} />\n      </div>\n    </div>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}