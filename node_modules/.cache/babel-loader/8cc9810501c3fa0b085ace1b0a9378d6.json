{"ast":null,"code":"var _jsxFileName = \"C:\\\\Files\\\\Course\\\\react-wordle-copy\\\\wordle-copy\\\\src\\\\App.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useReducer } from \"react\";\nimport \"./index.css\";\nimport WORDS from \"./Constants/WORDS.js\";\nimport generateMysteryWord from \"./Functions/generateMysteryWord\";\nimport reducer from \"./Functions/reducer\";\nimport Board from \"./Components/Board\";\nimport handleKeyPress from \"./Functions/handleKeyPress\";\nimport EMPTY_WORDS_ARR from \"./Constants/EMPTY_WORDS_ARR\";\nimport ACTIONS from \"./Constants/ACTIONS\";\nimport Expire from \"./Components/Expire\"; // const solution = generateMysteryWord(WORDS);\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function App() {\n  _s();\n\n  const [state, dispatch] = useReducer(reducer, {\n    mysteryWord: generateMysteryWord(WORDS),\n    wordsArr: EMPTY_WORDS_ARR,\n    currentWord: [],\n    currentCharIndex: -1,\n    currentRow: 0,\n    message: \"\",\n    gameIsEnded: false\n  });\n  useEffect(() => document.addEventListener(\"keydown\", e => handleKeyPress(e, dispatch)), []);\n  console.log(state.mysteryWord); // console.log(state);\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"header\",\n      children: /*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Wordle\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"game\",\n      children: [state.message && /*#__PURE__*/_jsxDEV(Expire, {\n        delay: \"3000\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"message\",\n          children: /*#__PURE__*/_jsxDEV(\"h1\", {\n            children: state.message\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 43,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 11\n      }, this), state.gameIsEnded && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"modal\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"message\",\n          children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n            children: state.message\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 50,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"start-new-game-button\",\n            onClick: () => dispatch({\n              type: ACTIONS.START_NEW_GAME\n            }),\n            children: \"New Game\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 51,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Board, {\n        data: state\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 34,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"avShzuGRPGKd43cp67dEeXDavA4=\");\n\n_c = App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["C:/Files/Course/react-wordle-copy/wordle-copy/src/App.js"],"names":["React","useEffect","useReducer","WORDS","generateMysteryWord","reducer","Board","handleKeyPress","EMPTY_WORDS_ARR","ACTIONS","Expire","App","state","dispatch","mysteryWord","wordsArr","currentWord","currentCharIndex","currentRow","message","gameIsEnded","document","addEventListener","e","console","log","type","START_NEW_GAME"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,UAA3B,QAA6C,OAA7C;AACA,OAAO,aAAP;AACA,OAAOC,KAAP,MAAkB,sBAAlB;AACA,OAAOC,mBAAP,MAAgC,iCAAhC;AACA,OAAOC,OAAP,MAAoB,qBAApB;AACA,OAAOC,KAAP,MAAkB,oBAAlB;AACA,OAAOC,cAAP,MAA2B,4BAA3B;AACA,OAAOC,eAAP,MAA4B,6BAA5B;AACA,OAAOC,OAAP,MAAoB,qBAApB;AACA,OAAOC,MAAP,MAAmB,qBAAnB,C,CAEA;;;AACA,eAAe,SAASC,GAAT,GAAe;AAAA;;AAC5B,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBX,UAAU,CAACG,OAAD,EAAU;AAC5CS,IAAAA,WAAW,EAAEV,mBAAmB,CAACD,KAAD,CADY;AAE5CY,IAAAA,QAAQ,EAAEP,eAFkC;AAG5CQ,IAAAA,WAAW,EAAE,EAH+B;AAI5CC,IAAAA,gBAAgB,EAAE,CAAC,CAJyB;AAK5CC,IAAAA,UAAU,EAAE,CALgC;AAM5CC,IAAAA,OAAO,EAAE,EANmC;AAO5CC,IAAAA,WAAW,EAAE;AAP+B,GAAV,CAApC;AAUAnB,EAAAA,SAAS,CACP,MACEoB,QAAQ,CAACC,gBAAT,CAA0B,SAA1B,EAAsCC,CAAD,IAAOhB,cAAc,CAACgB,CAAD,EAAIV,QAAJ,CAA1D,CAFK,EAGP,EAHO,CAAT;AAMAW,EAAAA,OAAO,CAACC,GAAR,CAAYb,KAAK,CAACE,WAAlB,EAjB4B,CAkB5B;;AAEA,sBACE;AAAK,IAAA,SAAS,EAAC,KAAf;AAAA,4BACE;AAAK,MAAA,SAAS,EAAC,QAAf;AAAA,6BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YADF,eAKE;AAAK,MAAA,SAAS,EAAC,MAAf;AAAA,iBACGF,KAAK,CAACO,OAAN,iBACC,QAAC,MAAD;AAAQ,QAAA,KAAK,EAAC,MAAd;AAAA,+BACE;AAAK,UAAA,SAAS,EAAC,SAAf;AAAA,iCACE;AAAA,sBAAKP,KAAK,CAACO;AAAX;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,cAFJ,EAQGP,KAAK,CAACQ,WAAN,iBACC;AAAK,QAAA,SAAS,EAAC,OAAf;AAAA,+BACE;AAAK,UAAA,SAAS,EAAC,SAAf;AAAA,kCACE;AAAA,sBAAKR,KAAK,CAACO;AAAX;AAAA;AAAA;AAAA;AAAA,kBADF,eAEE;AACE,YAAA,SAAS,EAAC,uBADZ;AAEE,YAAA,OAAO,EAAE,MAAMN,QAAQ,CAAC;AAAEa,cAAAA,IAAI,EAAEjB,OAAO,CAACkB;AAAhB,aAAD,CAFzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAFF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,cATJ,eAqBE,QAAC,KAAD;AAAO,QAAA,IAAI,EAAEf;AAAb;AAAA;AAAA;AAAA;AAAA,cArBF;AAAA;AAAA;AAAA;AAAA;AAAA,YALF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AA+BD;;GAnDuBD,G;;KAAAA,G","sourcesContent":["import React, { useEffect, useReducer } from \"react\";\nimport \"./index.css\";\nimport WORDS from \"./Constants/WORDS.js\";\nimport generateMysteryWord from \"./Functions/generateMysteryWord\";\nimport reducer from \"./Functions/reducer\";\nimport Board from \"./Components/Board\";\nimport handleKeyPress from \"./Functions/handleKeyPress\";\nimport EMPTY_WORDS_ARR from \"./Constants/EMPTY_WORDS_ARR\";\nimport ACTIONS from \"./Constants/ACTIONS\";\nimport Expire from \"./Components/Expire\";\n\n// const solution = generateMysteryWord(WORDS);\nexport default function App() {\n  const [state, dispatch] = useReducer(reducer, {\n    mysteryWord: generateMysteryWord(WORDS),\n    wordsArr: EMPTY_WORDS_ARR,\n    currentWord: [],\n    currentCharIndex: -1,\n    currentRow: 0,\n    message: \"\",\n    gameIsEnded: false,\n  });\n\n  useEffect(\n    () =>\n      document.addEventListener(\"keydown\", (e) => handleKeyPress(e, dispatch)),\n    []\n  );\n\n  console.log(state.mysteryWord);\n  // console.log(state);\n\n  return (\n    <div className=\"App\">\n      <div className=\"header\">\n        <h1>Wordle</h1>\n      </div>\n\n      <div className=\"game\">\n        {state.message && (\n          <Expire delay=\"3000\">\n            <div className=\"message\">\n              <h1>{state.message}</h1>\n            </div>\n          </Expire>\n        )}\n        {state.gameIsEnded && (\n          <div className=\"modal\">\n            <div className=\"message\">\n              <h1>{state.message}</h1>\n              <button\n                className=\"start-new-game-button\"\n                onClick={() => dispatch({ type: ACTIONS.START_NEW_GAME })}\n              >\n                New Game\n              </button>\n            </div>\n          </div>\n        )}\n        <Board data={state} />\n      </div>\n    </div>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}