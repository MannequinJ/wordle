{"ast":null,"code":"var _jsxFileName = \"C:\\\\Files\\\\Course\\\\react-wordle-copy\\\\wordle-copy\\\\src\\\\Components\\\\Board.js\";\nimport React from \"react\";\nimport ChainOfCells from \"./ChainOfCells\";\nimport { nanoid } from \"nanoid\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Board(_ref) {\n  let {\n    data\n  } = _ref;\n  const indexOfWordsArr = data.wordsArr.findIndex(arr => arr[0].id === \"\");\n  const wordsElements = data.wordsArr.map(word => /*#__PURE__*/_jsxDEV(ChainOfCells, {\n    word: word\n  }, nanoid(), false, {\n    fileName: _jsxFileName,\n    lineNumber: 8,\n    columnNumber: 5\n  }, this));\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"board\",\n    children: [wordsElements, /*#__PURE__*/_jsxDEV(ChainOfCells, {\n      word: data.currentWord\n    }, nanoid(), false, {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 11,\n    columnNumber: 5\n  }, this);\n}\n_c = Board;\n\nvar _c;\n\n$RefreshReg$(_c, \"Board\");","map":{"version":3,"sources":["C:/Files/Course/react-wordle-copy/wordle-copy/src/Components/Board.js"],"names":["React","ChainOfCells","nanoid","Board","data","indexOfWordsArr","wordsArr","findIndex","arr","id","wordsElements","map","word","currentWord"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,YAAP,MAAyB,gBAAzB;AACA,SAASC,MAAT,QAAuB,QAAvB;;AAEA,eAAe,SAASC,KAAT,OAAyB;AAAA,MAAV;AAAEC,IAAAA;AAAF,GAAU;AACtC,QAAMC,eAAe,GAAGD,IAAI,CAACE,QAAL,CAAcC,SAAd,CAAyBC,GAAD,IAASA,GAAG,CAAC,CAAD,CAAH,CAAOC,EAAP,KAAc,EAA/C,CAAxB;AACA,QAAMC,aAAa,GAAGN,IAAI,CAACE,QAAL,CAAcK,GAAd,CAAmBC,IAAD,iBACtC,QAAC,YAAD;AAA6B,IAAA,IAAI,EAAEA;AAAnC,KAAmBV,MAAM,EAAzB;AAAA;AAAA;AAAA;AAAA,UADoB,CAAtB;AAGA,sBACE;AAAK,IAAA,SAAS,EAAC,OAAf;AAAA,eACGQ,aADH,eAME,QAAC,YAAD;AAA6B,MAAA,IAAI,EAAEN,IAAI,CAACS;AAAxC,OAAmBX,MAAM,EAAzB;AAAA;AAAA;AAAA;AAAA,YANF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAUD;KAfuBC,K","sourcesContent":["import React from \"react\";\r\nimport ChainOfCells from \"./ChainOfCells\";\r\nimport { nanoid } from \"nanoid\";\r\n\r\nexport default function Board({ data }) {\r\n  const indexOfWordsArr = data.wordsArr.findIndex((arr) => arr[0].id === \"\");\r\n  const wordsElements = data.wordsArr.map((word) => (\r\n    <ChainOfCells key={nanoid()} word={word} />\r\n  ));\r\n  return (\r\n    <div className=\"board\">\r\n      {wordsElements}\r\n      {}\r\n      {/* {data.wordsArr.length < 6 && (\r\n        <ChainOfCells key={nanoid()} word={data.currentWord} />\r\n      )} */}\r\n      <ChainOfCells key={nanoid()} word={data.currentWord} />\r\n    </div>\r\n  );\r\n}\r\n"]},"metadata":{},"sourceType":"module"}